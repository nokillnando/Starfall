--@name Physics Adjuster
--@author [C17] Red Fox
--@server

-- Initialize adjustable variables with default values
local DEFAULT_FRICTION = 10 --dont think this actually does anything at all
local DEFAULT_INERTIA = Vector(20, 15, 20)
local DEFAULT_DRAG_ENABLED = false
local DEFAULT_LINEAR_DAMPING = 0
local DEFAULT_ANGULAR_DAMPING = 0

local DEFAULT_BASE_INERTIA = Vector(2000, 1000, 1000)
local DEFAULT_BASE_DRAG_ENABLED = false
local DEFAULT_BASE_LINEAR_DAMPING = 0
local DEFAULT_BASE_ANGULAR_DAMPING = 0

-- Create variables that can be adjusted individually
local settings = {
    friction = DEFAULT_FRICTION,
    inertia = DEFAULT_INERTIA,
    enableDrag = DEFAULT_DRAG_ENABLED,
    linearDamping = DEFAULT_LINEAR_DAMPING,
    angularDamping = DEFAULT_ANGULAR_DAMPING,
    
    inertiaBase = DEFAULT_BASE_INERTIA,
    enableDragBase = DEFAULT_BASE_DRAG_ENABLED,
    linearDampingBase = DEFAULT_BASE_LINEAR_DAMPING,
    angularDampingBase = DEFAULT_BASE_ANGULAR_DAMPING
}

-- Define wire ports for wheels array and base entity
wire.adjustPorts({
    Wheels = "array",
    Base = "entity"
})

-- Function to apply settings to a physics object
local function applyPhysicsSettings(entity)
    if isValid(entity) and entity:isValid() then
        -- Set entity friction
        --print("old "..entity:getFriction())
        entity:setFriction(settings.friction)
        --print("new "..entity:getFriction())
        -- Set entity inertia
        entity:setInertia(settings.inertia)
        
        -- Get physics object
        local phys = entity:getPhysicsObject()
        
        if isValid(phys) then
            -- Enable/disable drag
            phys:enableDrag(settings.enableDrag)
            
            -- Set damping values
            phys:setDamping(settings.linearDamping, settings.angularDamping)
        end
    end
end

-- Function to apply settings to a physics object
local function applyPhysicsSettingsBase(entity)
    if isValid(entity) and entity:isValid() then

        -- Set entity inertia
        entity:setInertia(settings.inertiaBase)
        
        -- Get physics object
        local phys = entity:getPhysicsObject()
        
        if isValid(phys) then
            -- Enable/disable drag
            phys:enableDrag(settings.enableDragBase)
            
            -- Set damping values
            phys:setDamping(settings.linearDampingBase, settings.angularDampingBase)
        end
    end
end

-- Function to update all wheels
local function updateWheels()
    local wheels = wire.ports.Wheels
    
    if wheels and type(wheels) == "table" then
        for _, wheel in pairs(wheels) do
            if isValid(wheel) then
                applyPhysicsSettings(wheel)
            end
        end
    end
end

-- Function to update all wheels
local function updateBase()
    local base = wire.ports.Base

    if isValid(base) then
        applyPhysicsSettingsBase(base)
    end   
end

--[[
-- Apply settings to base entity
wire.inputs.ApplySettings = function()
    local base = wire.ports.Base
    if IsValid(base) then
        applyPhysicsSettings(base)
        print("Applied settings to base entity")
    else
        print("No valid base entity connected")
    end
end-]]

updateWheels()
updateBase()
